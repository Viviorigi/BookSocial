server:
  port: 8888

app:
  api-prefix: /api/v1

spring:
  application:
    name: api-gateway
  data:
    redis:
      host: localhost
      port: 6379
      password: redispass
      timeout: 60000

  cloud:
    gateway:
      # Áp dụng rate-limit mặc định cho tất cả route
      default-filters:
        - name: RequestRateLimiter
          args:
            key-resolver: "#{@clientKeyResolver}"   # Bean bạn viết ở bước KeyResolver
            redis-rate-limiter.replenishRate: 10    # 10 req/giây
            redis-rate-limiter.burstCapacity: 20    # cho phép burst lên 20
            redis-rate-limiter.requestedTokens: 1
        - AddResponseHeader=X-RateLimit-Policy, "10rps; burst=20"
      routes:
        - id: identity_service
          uri: http://localhost:8080
          predicates:
          - Path=${app.api-prefix}/identity/**
          filters:
          - StripPrefix=2
          - name: RequestRateLimiter
            args:
              key-resolver: "#{@clientKeyResolver}"
              redis-rate-limiter.replenishRate: 3
              redis-rate-limiter.burstCapacity: 6
        - id: profile_service
          uri: http://localhost:8081
          predicates:
          - Path=${app.api-prefix}/profile/users/**
          filters:
          - StripPrefix=2
        - id: notification_service
          uri: http://localhost:8082
          predicates:
            - Path=${app.api-prefix}/notification/**
          filters:
            - StripPrefix=2
        - id: post_service
          uri: http://localhost:8083
          predicates:
            - Path=${app.api-prefix}/post/**
          filters:
            - StripPrefix=2
        - id: file_service
          uri: http://localhost:8084
          predicates:
            - Path=${app.api-prefix}/file/**
          filters:
            - StripPrefix=2
        - id: chat_service
          uri: http://localhost:8085
          predicates:
            - Path=${app.api-prefix}/chat/**
          filters:
            - StripPrefix=2